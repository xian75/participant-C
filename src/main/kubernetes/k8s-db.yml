# db-persistent-volume.yml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: participant-c-postgres-data-persisent-volume
  labels:
    type: local
spec:
  claimRef:
    namespace: default
    name: participant-c-postgres-data-persisent-volume-claim
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /run/desktop/mnt/host/c/home/k8s/participant-c-postgres-data
---
# db-persistent-volume-claim.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: participant-c-postgres-data-persisent-volume-claim
spec:
  volumeName: participant-c-postgres-data-persisent-volume
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# db-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: participant-c-db
spec:
  selector:
    matchLabels:
      app: participant-c-db
  replicas: 1
  template:
    metadata:
      labels:
        app: participant-c-db
    spec:
      containers:
        - name: participant-c-db
          image: postgres:14
          ports:
            - containerPort: 5432
              name: par-c-db-port
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: participant-c-postgres-data-storage
            - mountPath: "/docker-entrypoint-initdb.d/participant-c.sql"
              subPath: participant-c.sql
              name: sql-command
          env:
            - name: POSTGRES_DB
              value: db_c
            - name: POSTGRES_USER
              value: username_c
            - name: POSTGRES_PASSWORD
              value: password_c
          #resources:
          #  limits:
          #    memory: 500M
          #    cpu: 500m
      volumes:
        - name: participant-c-postgres-data-storage
          persistentVolumeClaim:
            claimName: participant-c-postgres-data-persisent-volume-claim
        - name: sql-command
          configMap:
            name: participant-c-db-init
---
# db-service.yml
apiVersion: v1
kind: Service
metadata:
  name: participant-c-db-service
spec:
  type: NodePort
  selector:
    app: participant-c-db
  ports:
    - name: par-c-db-port
      protocol: TCP
      port: 5432 # porta esterna del servizio in Docker
      targetPort: 5432 # porta interna del servizio in Docker
      nodePort: 30434 # porta esterna del cluster in Kubernetes (l'unica esposta su localhost)